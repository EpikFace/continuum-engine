import { IncrementalEngine } from './engine.js';

const engine = new IncrementalEngine();

/**
 * This method is called for each 'tick' or cycle generated by requestAnimationFrame
 * @param {} dt 
 */
const onTick = (dt) => {
    engine.onTick(dt);
    updateUI();
    window.requestAnimationFrame(onTick);
}

// DOM elements
const statusDiv = document.getElementById("content");
let buttons = {}

function updateUI() {
    let text = "Entities:<br><br>";

    for (let e in engine.entities) {
        let entity = engine.entities[e];
        text += `${e} (${engine.formatNumber(entity.incrementBy)}/${entity.incrementAfter}ms): ${engine.formatNumber(entity.count)} (${entity.count})<br>`;
    }

    statusDiv.innerHTML = text;
}

// start the timer using animation frame
window.onload = function() {
    engine.createEntity("Source code", 20, 0, 1);
    engine.createEntity("Graphics", 75, 0, 1);
    engine.createEntity("Sound", 150, 0, 1);
    engine.createEntity("Text", 250, 0, 1);
    engine.createEntity("Translations", 650, 0, 0.1);

    buttons = {
        "formatScientific": document.getElementById("formatScientific"),
        "formatDictionary": document.getElementById("formatDictionary"),
        "formatAbstract": document.getElementById("formatAbstract"),
        "Source Code": {
            "+": document.getElementById("SC+"),
            "-": document.getElementById("SC-")
        },
        "Graphics": {
            "+": document.getElementById("Graphics+"),
            "-": document.getElementById("Graphics-")
        }
    };

    buttons.formatScientific.addEventListener("click", (e) => { engine.setNumberFormatter("scientific") });
    buttons.formatDictionary.addEventListener("click", (e) => { engine.setNumberFormatter("dictionary") });
    buttons.formatAbstract.addEventListener("click", (e) => { engine.setNumberFormatter("abstract") });
    buttons["Source Code"]["+"].addEventListener("click", (e) => {
        engine.entities["Source code"].incrementBy+=10;
    });
    buttons["Source Code"]["-"].addEventListener("click", (e) => {
        engine.entities["Source code"].incrementBy--;
        if ( engine.entities["Source code"].incrementBy < 0 ) {
            engine.entities["Source code"].incrementBy = 0;
        }
    });
    buttons["Graphics"]["+"].addEventListener("click", (e) => {
        engine.entities["Graphics"].incrementBy++;
    });
    buttons["Graphics"]["-"].addEventListener("click", (e) => {
        engine.entities["Graphics"].incrementBy--;
        if ( engine.entities["Graphics"].incrementBy < 0 ) {
            engine.entities["Graphics"].incrementBy = 0;
        }
    });

    console.log("%cIncremental Engine loaded and initialised", "color: blue");
    window.requestAnimationFrame(onTick);
};

import { IncrementalEngine } from './engine.js';

const engine = new IncrementalEngine();

/**
 * This method is called for each 'tick' or cycle generated by requestAnimationFrame
 * @param {} dt 
 */
const onTick = (dt) => {
    engine.onTick(dt);
    updateUI();
    window.requestAnimationFrame(onTick);
}

function updateUI() {
    let text = "Entities:<br><br>";

    for (let e in engine.entities) {
        let entity = engine.entities[e];
        text += `${e} (${entity.incrementBy}/${entity.incrementAfter}ms): ${entity.count.toFixed(2)}<br>`;
    }

    document.body.innerHTML = text;
}

// start the timer using animation frame
window.onload = function() {
    engine.createEntity("Source code", 20, 0, 1);
    engine.createEntity("Graphics", 75, 0, 1);
    engine.createEntity("Sound", 150, 0, 1);
    engine.createEntity("Text", 250, 0, 1);
    engine.createEntity("Translations", 650, 0, 0.1);
    console.log("%cIncremental Engine loaded and initialised", "color: blue");
    window.requestAnimationFrame(onTick);
};
